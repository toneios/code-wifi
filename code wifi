#include <ESP8266WiFi.h>

// Nom et mot de passe du réseau WIFI
const char* ssid = "Livebox-D1D0";
const char* password = "d3f5t9v6&*";

// Creation d un serveur qui ecoute sur le port 80
WiFiServer server(80);

void setup() {
  Serial.begin(115200);
  delay(10);

  // Declaration port GPIO2 en sortie
  pinMode(2, OUTPUT);
  digitalWrite(2, 0);
  
  // Connection au réseau WiFi
  Serial.println();
  Serial.println();
  Serial.print("Connection a ");
  Serial.println(ssid);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi OK");
  
  // demarrage du serveur
  server.begin();
  Serial.println("Server OK");

  // Adresse IP locale attribuee
  Serial.println(WiFi.localIP());
}

void loop() {
  // Un client est-il connecte ?
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  
  // Attente donnees envoyees par un client
  Serial.println("Nouveau client");
  while(!client.available()){
    delay(1);
  }
  
  // Lecture premiere ligne de la requete
  String req = client.readStringUntil('\r');
  Serial.println(req);
  client.flush();
  
  // Decodage de la requete recue
  int val;
  if (req.indexOf("/gpio/0") != -1){
    val = 0;
    Serial.println("Demande extinction LED");}
  else if (req.indexOf("/gpio/1") != -1){
    val = 1;
    Serial.println("Demande allumage LED");}
  else {
    Serial.println("Requete invalide");
    client.stop();
    return;
  }

  // Positionnement port GPIO2
  digitalWrite(2, val);
  
  client.flush();

  // Prepararation de la reponse au client WEB
  String s = "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE HTML>\r\n<html>\r\nGPIO est maintenant ";
  s += (val)?"allumee":"eteinte";
  s += "</html>\n";

  // Envoi de la reponse au client
  client.print(s);
  delay(1);
  Serial.println("Client deconnecte");


}
